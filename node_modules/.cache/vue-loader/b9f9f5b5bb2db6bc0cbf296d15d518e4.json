{"remainingRequest":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\thesis\\toxic-comments-moderation\\src\\App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"C:\\thesis\\toxic-comments-moderation\\src\\App.vue","mtime":1673181680719},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651676244570},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\index.js","mtime":1651676243816}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPEV4cGVyaW1lbnQgdGl0bGU9Ik1vZGVyYXRpb24gb2Ygb25saW5lIGNvbW1lbnRzIj4KCiAgPCEtLSAqfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+KiAgSW5zdHJ1Y3Rpb25zICAqfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fiogLS0+CgogICAgPCEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gc2Vuc2l0aXZlIGNvbnRlbnQgd2FybmluZyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tPgogICAgPFNjcmVlbj4KICAgIDxTbGlkZT4KICAgICAgPGRpdiBjbGFzcz0iaW5zdHJ1Y3Rpb25zdGV4dCI+CiAgICAgICAgPGltZyBzcmM9Ii4uL3B1YmxpYy9pbWFnZXMvd2FybmluZy5wbmciIGFsdD0id2FybmluZyIgY2xhc3M9ImNlbnRlciIgIHdpZHRoPSIxMDAiIC8+CiAgICAgICAgPHA+ICAKICAgICAgICAgIEluIHRoaXMgZXhwZXJpbWVudCB5b3Ugd2lsbCBiZSBhc2tlZCB0byBtb2RlcmF0ZSByZWFsIG9ubGluZSBjb21tZW50cywgc29tZSBvZiB3aGljaCBjYW4gYmUgPGI+dXBzZXR0aW5nIG9yIHRyaWdnZXJpbmc8L2I+IHRvIHNvbWUgcGVvcGxlLiAKICAgICAgICAgIFBsZWFzZSBvbmx5IGNvbnRpbnVlIHBhcnRpY2lwYXRpbmcgaWYgeW91IGFyZSBub3QgYWZmZWN0ZWQgYnkgcHJvZmFuaXR5LCBpbnN1bHRzIG9yIGNvbnRyb3ZlcnNpYWwgY29tbWVudHMuCiAgICAgICAgPC9wPgogICAgICAgIDxwPgogICAgICAgICAgVGhlIHBlcnNvbmFsIGluZm9ybWF0aW9uIHJlcXVpcmVkIGF0IHRoZSBlbmQgb2YgdGhlIGV4cGVyaW1lbnQgaXMgY29tcGxldGVseSA8Yj52b2x1bnRhcnk8L2I+LCB3aWxsIHJlbWFpbiA8Yj5jb25maWRlbnRpYWw8L2I+IGFuZCB3aWxsIG5vdCBiZSBhc3NvY2lhdGVkIHdpdGggeW91ciBuYW1lLiAgCiAgICAgICAgPC9wPgogICAgICAgIDxwPgogICAgICAgIDxpPlRoZSBleHBlcmltZW50IGR1cmF0aW9uIGlzIGJldHdlZW4gMTAgYW5kIDE1IG1pbnV0ZXMuIDwvaT4KICAgICAgICA8L3A+CiAgICAgICAgPHA+CiAgICAgICAgICA8Yj4KICAgICAgICAgIEJ5IGNsaWNraW5nIHRoZSBidXR0b24gYmVsb3csIHlvdSBjb25zZW50IHRvIHRoZSB0ZXJtcyBhYm92ZSBhbmQgYWdyZWUgdG8gcGFydGljaXBhdGUgaW4gdGhlIGV4cGVyaW1lbnQuIAogICAgICAgICAgPC9iPgogICAgICAgIDwvcD4KICAgICAgICA8YnV0dG9uIEBjbGljaz0iJG1hZ3BpZS5uZXh0U2NyZWVuKCkiPkkgY29uc2VudDwvYnV0dG9uPgogICAgICA8L2Rpdj4KICAgIDwvU2xpZGU+CjwvU2NyZWVuPgogICAgCiAgICA8IS0tIDxJbnN0cnVjdGlvblNjcmVlbj4KICAgICAgPGRpdiBjbGFzcz0iaW5zdHJ1Y3Rpb25zdGV4dCI+CiAgICAgICAgPGltZyBzcmM9Ii4uL3B1YmxpYy9pbWFnZXMvd2FybmluZy5wbmciIGFsdD0id2FybmluZyIgY2xhc3M9ImNlbnRlciIgIHdpZHRoPSIxMDAiIC8+CiAgICAgICAgPHA+ICAKICAgICAgICAgIEluIHRoaXMgZXhwZXJpbWVudCB5b3Ugd2lsbCBiZSBhc2tlZCB0byBtb2RlcmF0ZSByZWFsIG9ubGluZSBjb21tZW50cywgc29tIG9mIHdoaWNoIGNhbiBiZSB1cHNldHRpbmcgb3IgdHJpZ2dlcmluZyB0byBzb21lIHBlb3BsZS4gQnkgY29udGludWluZyB0aGUgc3R1ZHkgeW91IGNvbnNlbnQgdG8gYmVpbmcgZXhwb3NlZCAKICAgICAgICAgIHRvIHRleHRzIGNvbnRhaW5pbmcgcHJvZmFuaXR5LCBpbnN1bHRzIG9yIGNvbnRyb3ZlcnNpYWwgY29tbWVudHMuCiAgICAgICAgICBUaGUgcGVyc29uYWwgaW5mb3JtYXRpb24gcmVxdWlyZWQgYXQgdGhlIGVuZCBvZiB0aGUgZXhwZXJpbWVudCBpcyBjb21wbGV0ZWx5IHZvbHVudGFyeSBhbmQgd2lsbCByZW1haW4gY29uZmlkZW50aWFsIGFuZCB3aWxsIG5vdCBiZSBhc3NvY2lhdGVkIHdpdGggeW91ciBuYW1lLiAgCiAgICAgICAgVGhlIGZvbGxvd2luZyBleHBlcmltZW50ICBXaGlsZSB3ZSB0cmllZCB0byBrZWVwIHRoZXNlIHRleHRzIHRvIGEgbWluaW11bSBuZWNlc3NhcnksIHBsZWFzZSBvbmx5IGNvbnRpbnVlIHBhcnRpY2lwYXRpbmcgaWYgeW91IGFyZSBub3QgYWZmZWN0ZWQgYnkgLgogICAgICAgIDwvcD4KICAgICAgICA8cD4KICAgICAgICA8aT5UaGUgZXhwZXJpbWVudCBkdXJhdGlvbiBpcyBiZXR3ZWVuIDEwIGFuZCAxNSBtaW51dGVzLiBUPC9pPgogICAgICAgIDwvcD4KICAgICAgICA8cD4+CiAgICAgICAgICBCeSBjbGlja2luZyB0aGUgYnV0dG9uIGJlbG93LCB5b3UgY29uc2VudCB0byB0aGUgdGVybXMgYWJvdmUgYW5kIGFncmVlIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBleHBlcmltZW50LiAKICAgICAgICA8L3A+CiAgICAgICAgPGJ1dHRvbiBAY2xpY2s9IiRtYWdwaWUubmV4dFNjcmVlbignZXhwZXJpbWVudCcpIj5qdW1wIHRvIGV4cGVyaW1lbnQ8L2J1dHRvbj4KICAgICAgPC9kaXY+CiAgICA8L0luc3RydWN0aW9uU2NyZWVuPiAtLT4KCiAgICA8IS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGRlc2NyaXB0aW9uIG9mIHRhc2sgLS0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLT4KICAgIDxJbnN0cnVjdGlvblNjcmVlbiA6dGl0bGU9IidJbnN0cnVjdGlvbnMnIj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbnN0cnVjdGlvbnN0ZXh0Ij4KICAgICAgICAgIDxwPgogICAgICAgICAgICBJdCdzIGVhc3kgdG8gYmUgbWVhbiBvbiB0aGUgaW50ZXJuZXQuIFRvZGF5IHlvdSB3aWxsIHRha2UgdGhlIHJvbGUgb2YgYSA8Yj5tb2RlcmF0b3I8L2I+IGFuZCB0cnkgdG8ga2VlcCBvbmxpbmUgY29udmVyc2F0aW9ucyBjaXZpbGl6ZWQsIG5pY2UsIGFuZCB3aXRoIG5vIG1lYW4gY29tbWVudHMhIHt7ZW1vamkoMTI5MzAzKX19CiAgICAgICAgICA8L3A+CgogICAgICAgICAgPHA+IAogICAgICAgICAgICBZb3VyIHRhc2sgaXMgdG8gcmVhZCA8Yj5yZWFsIGNvbW1lbnRzPC9iPiBmcm9tIG9ubGluZSBjb252ZXJzYXRpb25zIG9uIHBsYXRmb3JtcyBsaWtlIHR3aXR0ZXIsIHJlZGRpdCwgb3Igd2lraXBlZGlhIHRhbGssIGFuZCBkZWNpZGUgaWYgdGhleSBzaG91bGQgYmUgcHVibGlzaGVkIG9ubGluZSAoPGI+QVBQUk9WRTwvYj4pLCBvciBkZWxldGVkICg8Yj5SRUpFQ1Q8L2I+KS4KICAgICAgICAgIDwvcD4gIAogICAgICAgICAgPHAgdi1pZj0iZ3JvdXA9PSdzY29yZSciPiAKICAgICAgICAgICAge3tlbW9qaSgxMjgxODcgKX19IFRvIGhlbHAgeW91LCBhbiBBSSBhc3Npc3RhbnQgd2lsbCBzaG93IHlvdSBob3cgbGlrZWx5IGl0IGlzIHRoYXQgYSBjb21tZW50IGlzIDxiPnRveGljPC9iPi4gWW91IGNhbiB1c2UgdGhpcyBzY29yZSB0byBoZWxwIHlvdSBtYWtlIGEgZGVjaXNpb24sIGJ1dCBkb24ndCByZWx5IHRvbyBtdWNoIG9uIGl0LiAKICAgICAgICAgICAgPGJyPgogICAgICAgICAgICBBbiBhZGRpdGlvbmFsIHF1ZXN0aW9uIHdpbGwgYXNrIHdoZXRoZXIgeW91IHRoaW5rIHRoZSBBSSBnb3QgY2xvc2UgdG8gcHJlZGljdGluZyB0aGUgY29ycmVjdCBhbnN3ZXIgKGJhc2VkIG9uIHRoZSBsaWtlbGlob29kIHNjb3JlKS4gCiAgICAgICAgICA8L3A+IAogICAgICAgIDwvZGl2PgogICAgPC9JbnN0cnVjdGlvblNjcmVlbj4KCiAgICA8SW5zdHJ1Y3Rpb25TY3JlZW4gOnRpdGxlPSInSW5zdHJ1Y3Rpb25zJyI+CiAgICAgICAgPGRpdiBjbGFzcz0iaW5zdHJ1Y3Rpb25zdGV4dCI+CiAgICAgICAgICA8cD4gCiAgICAgICAgICAgIHt7ZW1vamkoOTk5NSl9fSBFdmVyeSBub3cgYW5kIHRoZW4geW91IHdpbGwgYmUgYXNrZWQgdG8gPGI+YW5zd2VyIGEgcXVlc3Rpb248L2I+IGFib3V0IHRoZSBjb21tZW50IHlvdSBqdXN0IHJlYWQsIHNvIGFsd2F5cyBwYXkgYXR0ZW50aW9uIHRvIHRoZSB0ZXh0ISBUaGlzIGlzIHRoZSBxdWVzdGlvbjoKICAgICAgICAgIDwvcD4KICAgICAgICAgIDxwPgogICAgICAgICAgICA8aT4ie3tjb21wcmVoZW5zaW9uX3F1ZXN0aW9ufX0iPC9pPgogICAgICAgICAgPC9wPgoKICAgICAgICA8L2Rpdj4KICAgIDwvSW5zdHJ1Y3Rpb25TY3JlZW4+CiAgICAgICAgIAogICAgPEluc3RydWN0aW9uU2NyZWVuIDp0aXRsZT0iJ0luc3RydWN0aW9ucyciPgogICAgPGRpdiBjb250ZW50ZWRpdGFibGU9InRydWUiIGNsYXNzPSJpbnN0cnVjdGlvbnN0ZXh0Ij4KICAgICAgPHA+CiAgICAgICAgSGVyZSBhcmUgc29tZSBjYXRlZ29yaWVzIG9mIGNvbW1lbnRzIHRoYXQgYXJlIDxiPnRveGljPC9iPiBhbmQgd2Ugd2FudCB0byByZWplY3Q6CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpPm1lYW4sIGhhdGVmdWwgY29tbWVudHM8L2xpPgogICAgICAgICAgPGxpPnNleGlzdCwgcmFjaXN0LCBhYmxlaXN0IGNvbW1lbnRzPC9saT4KICAgICAgICAgIDxsaT5jb21tZW50cyB0aGF0IGNvbnRhaW4gaGFybWZ1bCBzdGVyZW90eXBlczwvbGk+CiAgICAgICAgICA8bGk+Y29tbWVudHMgdGhhdCBhdHRhY2sgYSBwZXJzb24gb3IgYSBtaW5vcml0eSBncm91cDwvbGk+CiAgICAgICAgICA8bGk+Y29tbWVudHMgdGhhdCB0aHJlYXRlbiBzb21lb25lPC9saT4KICAgICAgICAgIDxsaT5jb21tZW50cyB0aGF0IHdhbnQgdG8gaHVydCBzb21lb25lIGJ5IG1vY2tpbmcgaG93IHRoZXkgZmVlbCBvciB3aGF0IHRoZXkgZXhwZXJpZW5jZWQuPC9saT4KICAgICAgICAgIDxsaT5jb21tZW50cyB0aGF0IGRvbid0IG1ha2Ugc2Vuc2UsIG9yIGFyZSBqdXN0IHRyeWluZyB0byBwcm92b2tlIGEgcmVhY3Rpb24gKHRyb2xsaW5nKSA8L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvcD4KICAgICAgCgogICAgICB7e2Vtb2ppKDEyODE3Myl9fSBOb3RlOiBBIGNvbW1lbnQgY2FuIGNvbnRhaW4gPGI+YmFkIHdvcmRzPC9iPiAocHJvZmFuaXR5KSwgYW5kIG5vdCBiZSBjb25zaWRlcmVkIHRveGljLiAKICAgICAgCiAgICAgIDxwPgogICAgICAgIExldCdzIGNvbnRpbnVlIHRvIGEgc2hvcnQgdHJhaW5pbmcgcGhhc2UsIHRvIHByb3Blcmx5IHVuZGVyc3RhbmQgd2hhdCB5b3UgaGF2ZSB0byBkbyEKICAgICAgPC9wPgogICAgPC9kaXY+CiAgICA8L0luc3RydWN0aW9uU2NyZWVuPgoKICAgIAogICAgPEluc3RydWN0aW9uU2NyZWVuIDp0aXRsZT0iJ1ByYWN0aWNlJyI+CiAgICAgIDxkaXYgY2xhc3M9Imluc3RydWN0aW9uc3RleHQiPgogICAgICAgIDxwPgoJCQkgIE5vdyB5b3Ugd2lsbCByZWFkIGEgZmV3IHByYWN0aWNlIHF1ZXN0aW9ucy4gUmVhZCB0aGUgaW5zdHJ1Y3Rpb25zIGFuZCB0aGUgZmVlZGJhY2sgY2FyZWZ1bGx5LCBpbiBvcmRlciB0byB1bmRlcnN0YW5kIHRoZSB0YXNrLiAKICAgICAgICA8YnI+CiAgICAgICAgV2hlbiB5b3UgYXJlIHJlYWR5LCBjbGljayB0aGUgIk5FWFQiIGJ1dHRvbiB0byA8Yj5zdGFydCB0aGUgcHJhY3RpY2Ugc2Vzc2lvbjwvYj4hCgkJCSAgPC9wPgogICAgICA8L2Rpdj4KCQk8L0luc3RydWN0aW9uU2NyZWVuPgogICAgCgogICAgPCEtLSAqfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qICBUcmFpbmluZyAgKn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qIC0tPgoKICAgIDwhLS0gUHJhY3RpY2UgdHJpYWxzIC0tPgogICAgPHRlbXBsYXRlIHYtZm9yPSIodHJpYWwsIGkpIG9mIHByYWN0aWNlX3RyaWFscyI+CiAgICAgIDwhLS0gVGhlIHRhc2ssIHdoZXJlIHRoZSBwYXJ0aWNpcGFudCBjYW4gbWFrZSBhIGRlY2lzaW9uICAtLT4KICAgICAgPFRyaWFsU2NyZWVuIHYtaWY9Imdyb3VwPT09J3Njb3JlJyIKICAgICAgICA6dHJpYWw9InRyaWFsIgogICAgICAgIDprZXk9Iid0cmFpbmluZy1zY29yZS0nICsgaSIKICAgICAgICA6dHJpYWxUeXBlPSIndHJhaW5pbmctdGFzayciCiAgICAgICAgOnRyaWFsbnVtYmVyPSJpIgogICAgICAgIDpwcm9ncmVzcz0iaSAvIHByYWN0aWNlX3RyaWFscy5sZW5ndGgiCiAgICAgICAgOm9wdGlvbnM9IlsnQXBwcm92ZScsICdSZWplY3QnXSIKICAgICAgICA6dGV4dD0idHJpYWwudGV4dCIKICAgICAgICA6aW5zdHJ1Y3Rpb25zPSInTm90aWNlIHRoZSBUT1hJQ0lUWSBTQ09SRS4gUmVqZWN0IHRoZSBjb21tZW50IGlmIHlvdSB0aGluayBpdCBpcyB0b3hpYywgYXBwcm92ZSBpdCBvdGhlcndpc2UuJyIKICAgICAgICA6cXVlc3Rpb249ImVtb2ppKDEyODcxOCkiCiAgICAgICAgOnRhc2s9InRydWUiCiAgICAgICAgOmdyb3VwPWdyb3VwCiAgICAgIC8+CgogICAgICA8VHJpYWxTY3JlZW4gdi1lbHNlCiAgICAgICAgOnRyaWFsPSJ0cmlhbCIKICAgICAgICA6a2V5PSIndHJhaW5pbmctbm8tc2NvcmUtJyArIGkiCiAgICAgICAgOnRyaWFsVHlwZT0iJ3RyYWluaW5nLXRhc2snIgogICAgICAgIDp0cmlhbG51bWJlcj0iaSIKICAgICAgICA6cHJvZ3Jlc3M9ImkgLyBwcmFjdGljZV90cmlhbHMubGVuZ3RoIgogICAgICAgIDpvcHRpb25zPSJbJ0FwcHJvdmUnLCAnUmVqZWN0J10iCiAgICAgICAgOnRleHQ9InRyaWFsLnRleHQiCiAgICAgICAgOmluc3RydWN0aW9ucz0iJ1JlamVjdCB0aGUgY29tbWVudCBpZiB5b3UgdGhpbmsgaXQgaXMgdG94aWMsIGFwcHJvdmUgaXQgb3RoZXJ3aXNlLiciCiAgICAgICAgOnF1ZXN0aW9uPSJlbW9qaSgxMjg3MTgpIgogICAgICAgIDp0YXNrPSJ0cnVlIgogICAgICAgIDpncm91cD1ncm91cAogICAgICAvPgogICAgICAKICAgICAgICAgIAogICAgICA8IS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBjb21wcmVoZW5zaW9uIHF1ZXN0aW9uICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tPgoKICAgICAgPCEtLSBjb21wcmVoZW5zaW9uIHF1ZXN0aW9uIGlzIHByb3ZpZGVkIHdpdGggYSBoaWdoZXIgcHJvYmFiaWxpdHkgZHVyaW5nIHRoZSBwcmFjdGljZSBwaGFzZSAtLT4KICAgICAgPFRyaWFsU2NyZWVuIHYtaWY9Ik1hdGgucmFuZG9tKCkgPCAwLjgiCiAgICAgICAgOnRyaWFsPSJ0cmlhbCIKICAgICAgICA6a2V5PSIndHJhaW5pbmctY29tcHJlaGVuc2lvbi0nICsgaSIKICAgICAgICA6dHJpYWxUeXBlPSIndHJhaW5pbmctY29tcHJlaGVuc2lvbiciCiAgICAgICAgOnRyaWFsbnVtYmVyPSJpIgogICAgICAgIDpwcm9ncmVzcz0iaSAvIHByYWN0aWNlX3RyaWFscy5sZW5ndGgiCiAgICAgICAgOm9wdGlvbnM9IlsnWWVzJywgJ05vJ10iCiAgICAgICAgOnRleHQ9Y29tcHJlaGVuc2lvbl9xdWVzdGlvbgogICAgICAgIDppbnN0cnVjdGlvbnM9IidBbnN3ZXIgdGhlIHF1ZXN0aW9uIGJlbG93IGJhc2VkIG9uIHRoZSBjb21tZW50IHlvdSByZWFkIGJlZm9yZS4nIgogICAgICAgIDp0YXNrPSJmYWxzZSIKICAgICAgICA6Y29tcHJlaGVuc2lvbj0idHJ1ZSIKICAgICAgICA6Z3JvdXA9Z3JvdXAKICAgICAgLz4KICAgIDwvdGVtcGxhdGU+CiAgICAgIAoKICAgIDwhLS0gKn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+KiAgRXhwZXJpbWVudCAgKn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qIC0tPgoKICAgIDwhLS0gVGhlIGV4cGVyaW1lbnQgcGhhc2UgIC0tPgogICAgPFNjcmVlbiA6dGl0bGU9IidFeHBlcmltZW50JyIgbGFiZWw9ImV4cGVyaW1lbnQiPgoJCQlQcmFjdGljZSByb3VuZCBpcyBvdmVyISBJbiB0aGUgbmV4dCBwaGFzZSB5b3Ugd2lsbCBnZXQgbm8gZmVlZGJhY2suIFJlYWQgZWFjaCBjb21tZW50IGNhcmVmdWxseSBhbmQgbWFrZSBhIGRlY2lzaW9uIGFjY29yZGluZyB0byB3aGF0IHlvdSB0aGluayBpcyBjb3JyZWN0LgoJCQk8YnI+CgkJCTxicj4KCQkJV2hlbiB5b3UgYXJlIHJlYWR5LCA8Yj5jbGljayB0aGUgYnV0dG9uIHRvIHN0YXJ0IHRoZSBleHBlcmltZW50PC9iPi4KCQkJPGJ1dHRvbiBAY2xpY2s9IiRtYWdwaWUubmV4dFNjcmVlbigpOyI+CgkJCQlTdGFydAoJCQk8L2J1dHRvbj4KCQk8L1NjcmVlbj4KCiAgPCEtLSBUcmlhbHMgLS0+CiAgICA8dGVtcGxhdGUgdi1mb3I9Iih0cmlhbCwgaSkgb2YgbWFpbl90cmlhbHMiID4KICAgICAgPCEtLSBUaGUgdGFzaywgd2hlcmUgdGhlIHBhcnRpY2lwYW50IGNhbiBtYWtlIGEgZGVjaXNpb24gIC0tPgogICAgICA8VHJpYWxTY3JlZW4KICAgICAgICA6dHJpYWw9InRyaWFsIgogICAgICAgIDprZXk9IidleHBlcmltZW50LScgKyBpIgogICAgICAgIDp0cmlhbC10eXBlPSInZXhwZXJpbWVudC10YXNrJyIKICAgICAgICA6dHJpYWxudW1iZXI9ImkiCiAgICAgICAgOnByb2dyZXNzPSJpL21haW5fdHJpYWxzLmxlbmd0aCIKICAgICAgICA6b3B0aW9ucz0iWydBcHByb3ZlJywgJ1JlamVjdCddIgogICAgICAgIDp0ZXh0PSJ0cmlhbC50ZXh0IgogICAgICAgIDp0YXNrPSJ0cnVlIgogICAgICAgIDpxdWVzdGlvbj0iZW1vamkoMTI4NzE4KSIKICAgICAgICA6Z3JvdXA9Z3JvdXAKICAgICAgLz4KCiAgICAgIDxUcmlhbFNjcmVlbiB2LWlmPSJncm91cD09PSdzY29yZSciCiAgICAgICAgOnRyaWFsPSJ0cmlhbCIKICAgICAgICA6a2V5PSInZXhwZXJpbWVudC1tYW5pcHVsYXRpb24tY2hlY2stJyArIGkiCiAgICAgICAgOnRyaWFsLXR5cGU9IidleHBlcmltZW50LWFncmVlJyIKICAgICAgICA6dHJpYWxudW1iZXI9ImkiCiAgICAgICAgOnByb2dyZXNzPSJpL21haW5fdHJpYWxzLmxlbmd0aCIKICAgICAgICA6b3B0aW9ucz0iWydZZXMnLCAnTm8nXSIKICAgICAgICA6cXVlc3Rpb249IidEbyB5b3UgdGhpbmsgdGhlIEFJIHByZWRpY3Rpb24gd2FzIGNsb3NlPyciCiAgICAgICAgOnRleHQ9InRyaWFsLnRleHQiCiAgICAgICAgOnRhc2s9InRydWUiCiAgICAgICAgOmdyb3VwPWdyb3VwCiAgICAgIC8+CgogIDwhLS0gQ29tcHJlaGVuc2lvbiBxdWVzdGlvbiBpcyBwcm92aWRlZCB3aXRoIGEgbG93ZXIgcHJvYmFiaWxpdHkgaW4gdGhlIGV4cGVyaW1lbnQgcGhhc2UgLS0+CiAgPFRyaWFsU2NyZWVuIHYtaWY9Ik1hdGgucmFuZG9tKCkgPCAwLjIiCiAgICAgICAgOnRyaWFsPSJ0cmlhbCIKICAgICAgICA6a2V5PSInZXhwZXJpbWVudC1jb21wcmVoZW5zaW9uLScgKyBpIgogICAgICAgIDp0cmlhbFR5cGU9IidleHBlcmltZW50LWNvbXByZWhlbnNpb24nIgogICAgICAgIDp0cmlhbG51bWJlcj0iaSIKICAgICAgICA6cHJvZ3Jlc3M9ImkgLyBtYWluX3RyaWFscy5sZW5ndGgiCiAgICAgICAgOm9wdGlvbnM9IlsnWWVzJywgJ05vJ10iCiAgICAgICAgOnRleHQ9Y29tcHJlaGVuc2lvbl9xdWVzdGlvbgogICAgICAgIDp0YXNrPSJmYWxzZSIKICAgICAgICA6Y29tcHJlaGVuc2lvbj0idHJ1ZSIKICAgICAgICA6Z3JvdXA9Z3JvdXAKICAgICAgLz4KICAgIDwvdGVtcGxhdGU+CgogICAgPEluc3RydWN0aW9uU2NyZWVuIDp0aXRsZT0iJ0FsbW9zdCBkb25lISciPgogICAgICA8ZGl2IGNsYXNzPSJpbnN0cnVjdGlvbnN0ZXh0Ij4KICAgICAgICA8cD4KCQkJICA8Yj5QbGVhc2Ugc3RheSB3aXRoIHVzIGp1c3QgYSBiaXQgbG9uZ2VyISB7e2Vtb2ppKDk3NDkpfX08L2I+CiAgICAgICAgPGJyPgogICAgICAgIE9uIHRoZSBuZXh0IHNjcmVlbiB5b3UgY2FuIGZpbGwgb3V0IHNvbWUgcGVyc29uYWwgaW5mb3JtYXRpb24uIElmIHlvdSBzdHVkeSBhdCB0aGUgT3NuYWJydWVjayBVbml2ZXJzaXR5LCB5b3UgY2FuIGVhcm4gMSBWUCBmb3IgeW91ciBwYXJ0aWNpcGF0aW9uLiAKICAgICAgICBJbiBvcmRlciB0byBjbGFpbSB0aGF0LCBwbGVhc2Ugc3VibWl0IHlvdXIgPGI+TWF0cmlrZWxudW1tZXI8L2I+IGFuZCA8Yj5mdWxsIG5hbWU8L2I+LiAgCiAgICAgICAgPGJyPgoJCQkgIDwvcD4KICAgICAgPC9kaXY+CgkJPC9JbnN0cnVjdGlvblNjcmVlbj4KICAgICAgCiAgICA8UG9zdFRlc3RTY3JlZW4gOmVkdWNhdGlvbj0iZmFsc2UiIDphZ2U9ImZhbHNlIiA6Z2VuZGVyPSJmYWxzZSIgOmNvbW1lbnRzPSJmYWxzZSIgOmxhbmd1YWdlcz0iZmFsc2UiPgogICAgICA8dGVtcGxhdGUgI2RlZmF1bHQ+CiAgICAgICAgPGxhYmVsPkZ1bGwgbmFtZSAob25seSBmb3IgY2xhaW1pbmcgVlAgaG91cnMpPGlucHV0IHR5cGU9InRleHQiIHYtbW9kZWw9JG1hZ3BpZS5tZWFzdXJlbWVudHMubmFtZT48L2xhYmVsPgogICAgICAgIDxsYWJlbD5NYXRyaWtlbG51bW1lciAob25seSBmb3IgY2xhaW1pbmcgVlAgaG91cnMpPGlucHV0IHR5cGU9InRleHQiIHYtbW9kZWw9JG1hZ3BpZS5tZWFzdXJlbWVudHMubWF0cmlrZWxucj48L2xhYmVsPgogICAgICAgIDxsYWJlbD5OYXRpdmUgbGFuZ3VhZ2VzPGlucHV0IHR5cGU9InRleHQiIHYtbW9kZWw9JG1hZ3BpZS5tZWFzdXJlbWVudHMubGFuZ3VhZ2VzPjwvbGFiZWw+CiAgICAgICAgPGxhYmVsPkFnZSA8YnI+PGlucHV0IHYtbW9kZWw9IiRtYWdwaWUubWVhc3VyZW1lbnRzLmFnZSIgdHlwZT0ibnVtYmVyIiBtYXg9IjExMCIgbWluPSIxOCIvPjwvbGFiZWw+CiAgICAgICAgPGJyPgogICAgICAgIDxsYWJlbD5EbyB5b3UgYmVsb25nIHRvIGFueSBpZGVudGl0eSBncm91cHM/IAogICAgICAgICAgICA8RHJvcGRvd25JbnB1dCA6b3B0aW9ucz0iWwogICAgICAgICAgICAgICAgICAgICAgJycsCiAgICAgICAgICAgICAgICAgICAgICAnSSBkbyBub3QgYmVsb25nIHRvIGFueSBpZGVudGl0eSBncm91cHMuJywKICAgICAgICAgICAgICAgICAgICAgICdMR0JUUScsCiAgICAgICAgICAgICAgICAgICAgICAnUGVvcGxlIHdpdGggZGlzYWJpbGl0aWVzJywKICAgICAgICAgICAgICAgICAgICAgICdSYWNpYWwvRXRobmljIG1pbm9yaXR5JywKICAgICAgICAgICAgICAgICAgICAgICdSZWxpZ2lvdXMgbWlub3JpdHknLAogICAgICAgICAgICAgICAgICAgICAgJ05ldXJvZGl2ZXJnZW50IHBlb3BsZScsCiAgICAgICAgICAgICAgICAgICAgICAnR2VuZGVyIG1pbm9yaXR5JywKICAgICAgICAgICAgICAgICAgICAgICdPdGhlcicKICAgICAgICAgICAgICAgICAgICAgIF0iCiAgICAgICAgICAgICAgICAgICAgOnJlc3BvbnNlLnN5bmM9IiRtYWdwaWUubWVhc3VyZW1lbnRzLmlkZW50aXR5Ii8+CiAgICAgICAgPC9sYWJlbD4KICAgICAgICA8bGFiZWw+RG8geW91IHJlZ3VsYXJseSBwYXJ0aWNpcGF0ZSBpbiBhY3RpdmlzdCBldmVudHMgb3Iga2VlcCB1cCB3aXRoIGFjdGl2aXN0IGNvbnRlbnQ/CiAgICAgICAgICAgIDxEcm9wZG93bklucHV0IDpvcHRpb25zPSJbCiAgICAgICAgICAgICAgICAgICAgICAnJywKICAgICAgICAgICAgICAgICAgICAgICdZZXMnLAogICAgICAgICAgICAgICAgICAgICAgJ05vJwogICAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICA6cmVzcG9uc2Uuc3luYz0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuYWN0aXZpc20iLz4KICAgICAgICA8L2xhYmVsPgogICAgICA8L3RlbXBsYXRlPgogICAgPC9Qb3N0VGVzdFNjcmVlbj4KIAogICAgPCEtLSA8RGVidWdSZXN1bHRzU2NyZWVuIC8+IC0tPgogICAgPFN1Ym1pdFJlc3VsdHNTY3JlZW4gLz4KICA8L0V4cGVyaW1lbnQ+Cg=="},null]}