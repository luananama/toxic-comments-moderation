{"remainingRequest":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\thesis\\toxic-comments-moderation\\src\\App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"C:\\thesis\\toxic-comments-moderation\\src\\App.vue","mtime":1675153379798},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651676244570},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\index.js","mtime":1651676243816}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPEV4cGVyaW1lbnQgdGl0bGU9Ik1vZGVyYXRpb24gb2Ygb25saW5lIGNvbW1lbnRzIj4KCiAgPCEtLSAqfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+KiAgSW5zdHJ1Y3Rpb25zICAqfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fiogLS0+CiAgPFNjcmVlbj4KICAgICAgPFNsaWRlPgogICAgICAgIDxkaXYgY2xhc3M9Imluc3RydWN0aW9uc3RleHQiPgogICAgICAgICAgPHA+ICAKICAgICAgICAgIFRoaXMgZXhwZXJpbWVudCBoYXMgZmluaXNoZWQuCiAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvU2xpZGU+CiAgICA8L1NjcmVlbj4KICAgIDwhLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHNlbnNpdGl2ZSBjb250ZW50IHdhcm5pbmcgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLT4KICAgIDxTY3JlZW4+CiAgICAgIDxTbGlkZT4KICAgICAgICA8ZGl2IGNsYXNzPSJpbnN0cnVjdGlvbnN0ZXh0Ij4KICAgICAgICAgIDxpbWcgc3JjPSIuLi9wdWJsaWMvaW1hZ2VzL3dhcm5pbmcucG5nIiBhbHQ9Indhcm5pbmciIGNsYXNzPSJjZW50ZXIiICB3aWR0aD0iMTAwIiAvPgogICAgICAgICAgPHA+ICAKICAgICAgICAgICAgSW4gdGhpcyBleHBlcmltZW50IHlvdSB3aWxsIGJlIGFza2VkIHRvIG1vZGVyYXRlIHJlYWwgb25saW5lIGNvbW1lbnRzLCBzb21lIG9mIHdoaWNoIGNhbiBiZSA8Yj51cHNldHRpbmcgb3IgdHJpZ2dlcmluZzwvYj4gdG8gc29tZSBwZW9wbGUuIAogICAgICAgICAgICBQbGVhc2Ugb25seSBjb250aW51ZSBwYXJ0aWNpcGF0aW5nIGlmIHlvdSBhcmUgbm90IGFmZmVjdGVkIGJ5IHByb2Zhbml0eSwgaW5zdWx0cyBvciBjb250cm92ZXJzaWFsIGNvbW1lbnRzLgogICAgICAgICAgPC9wPgogICAgICAgICAgPHA+CiAgICAgICAgICAgIFRoZSBwZXJzb25hbCBpbmZvcm1hdGlvbiByZXF1aXJlZCBhdCB0aGUgZW5kIG9mIHRoZSBleHBlcmltZW50IGlzIGNvbXBsZXRlbHkgPGI+dm9sdW50YXJ5PC9iPiwgd2lsbCByZW1haW4gPGI+Y29uZmlkZW50aWFsPC9iPiBhbmQgd2lsbCBub3QgYmUgYXNzb2NpYXRlZCB3aXRoIHlvdXIgbmFtZS4gIAogICAgICAgICAgPC9wPgogICAgICAgICAgPHA+CiAgICAgICAgICA8aT5UaGUgZXhwZXJpbWVudCBkdXJhdGlvbiBpcyBiZXR3ZWVuIDEwIGFuZCAxNSBtaW51dGVzLiA8L2k+CiAgICAgICAgICA8L3A+CiAgICAgICAgICA8cD4KICAgICAgICAgICAgPGI+CiAgICAgICAgICAgIEJ5IGNsaWNraW5nIHRoZSBidXR0b24gYmVsb3csIHlvdSBjb25zZW50IHRvIHRoZSB0ZXJtcyBhYm92ZSBhbmQgYWdyZWUgdG8gcGFydGljaXBhdGUgaW4gdGhlIGV4cGVyaW1lbnQuIAogICAgICAgICAgICA8L2I+CiAgICAgICAgICA8L3A+CiAgICAgICAgICA8YnV0dG9uIEBjbGljaz0iJG1hZ3BpZS5uZXh0U2NyZWVuKCkiPkkgY29uc2VudDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICA8L1NsaWRlPgogICAgPC9TY3JlZW4+CiAgICAKICAgIDwhLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gZGVzY3JpcHRpb24gb2YgdGFzayAtLSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tPgogICAgPEluc3RydWN0aW9uU2NyZWVuIDp0aXRsZT0iJ0luc3RydWN0aW9ucyciPgogICAgICAgIDxkaXYgY2xhc3M9Imluc3RydWN0aW9uc3RleHQiPgogICAgICAgICAgPHA+CiAgICAgICAgICAgIEl0J3MgZWFzeSB0byBiZSBtZWFuIG9uIHRoZSBpbnRlcm5ldC4gVG9kYXkgeW91IHdpbGwgdGFrZSB0aGUgcm9sZSBvZiBhIDxiPm1vZGVyYXRvcjwvYj4gYW5kIHRyeSB0byBrZWVwIG9ubGluZSBjb252ZXJzYXRpb25zIGNpdmlsaXplZCwgbmljZSwgYW5kIHdpdGggbm8gbWVhbiBjb21tZW50cyEge3tlbW9qaSgxMjkzMDMpfX0KICAgICAgICAgIDwvcD4KCiAgICAgICAgICA8cD4gCiAgICAgICAgICAgIFlvdXIgdGFzayBpcyB0byByZWFkIDxiPnJlYWwgY29tbWVudHM8L2I+IGZyb20gb25saW5lIGNvbnZlcnNhdGlvbnMgb24gcGxhdGZvcm1zIGxpa2UgdHdpdHRlciwgcmVkZGl0LCBvciB3aWtpcGVkaWEgdGFsaywgYW5kIGRlY2lkZSBpZiB0aGV5IHNob3VsZCBiZSBwdWJsaXNoZWQgb25saW5lICh7e2Vtb2ppKDk5ODkpfX0gPGI+QVBQUk9WRTwvYj4pLCBvciBkZWxldGVkICh7eyBlbW9qaSgxMDA2MCkgfX0gPGI+UkVKRUNUPC9iPikuCiAgICAgICAgICA8L3A+ICAKICAgICAgICAgIDxwIHYtaWY9Imdyb3VwPT0nc2NvcmUnIj4gCiAgICAgICAgICAgIHt7ZW1vamkoMTI4MTg3ICl9fSBUbyBoZWxwIHlvdSwgYW4gQUkgYXNzaXN0YW50IHdpbGwgc2hvdyB5b3UgaG93IGxpa2VseSBpdCBpcyB0aGF0IGEgY29tbWVudCBpcyA8Yj50b3hpYzwvYj4uIFlvdSBjYW4gdXNlIHRoaXMgc2NvcmUgdG8gaGVscCB5b3UgbWFrZSBhIGRlY2lzaW9uLCBidXQgZG9uJ3QgcmVseSB0b28gbXVjaCBvbiBpdC4gCiAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgQW4gYWRkaXRpb25hbCBxdWVzdGlvbiB3aWxsIGFzayB3aGV0aGVyIHlvdSB0aGluayB0aGUgQUkgZ290IGNsb3NlIHRvIHByZWRpY3RpbmcgdGhlIGNvcnJlY3QgYW5zd2VyIChiYXNlZCBvbiB0aGUgbGlrZWxpaG9vZCBzY29yZSkuIAogICAgICAgICAgPC9wPiAKICAgICAgICA8L2Rpdj4KICAgIDwvSW5zdHJ1Y3Rpb25TY3JlZW4+CgogICAgPEluc3RydWN0aW9uU2NyZWVuIDp0aXRsZT0iJ0luc3RydWN0aW9ucyciPgogICAgICAgIDxkaXYgY2xhc3M9Imluc3RydWN0aW9uc3RleHQiPgogICAgICAgICAgPHA+IAogICAgICAgICAgICB7e2Vtb2ppKDk5OTUpfX0gRXZlcnkgbm93IGFuZCB0aGVuIHlvdSB3aWxsIGJlIGFza2VkIHRvIDxiPmFuc3dlciBhIHF1ZXN0aW9uPC9iPiBhYm91dCB0aGUgY29tbWVudCB5b3UganVzdCByZWFkLCBzbyBhbHdheXMgcGF5IGF0dGVudGlvbiB0byB0aGUgdGV4dCEgVGhpcyBpcyB0aGUgcXVlc3Rpb246CiAgICAgICAgICA8L3A+CiAgICAgICAgICA8cD4KICAgICAgICAgICAgPGk+Int7Y29tcHJlaGVuc2lvbl9xdWVzdGlvbn19IjwvaT4KICAgICAgICAgIDwvcD4KCiAgICAgICAgPC9kaXY+CiAgICA8L0luc3RydWN0aW9uU2NyZWVuPgogICAgCiAgICA8SW5zdHJ1Y3Rpb25TY3JlZW4gOnRpdGxlPSInSW5zdHJ1Y3Rpb25zJyI+CiAgICA8ZGl2IGNvbnRlbnRlZGl0YWJsZT0idHJ1ZSIgY2xhc3M9Imluc3RydWN0aW9uc3RleHQiPgogICAgICA8cD4KICAgICAgICBIZXJlIGFyZSBzb21lIGNhdGVnb3JpZXMgb2YgY29tbWVudHMgdGhhdCBhcmUgPGI+dG94aWM8L2I+IGFuZCB3ZSB3YW50IHRvIHJlamVjdDoKICAgICAgICA8dWw+CiAgICAgICAgICA8bGk+bWVhbiwgaGF0ZWZ1bCBjb21tZW50czwvbGk+CiAgICAgICAgICA8bGk+c2V4aXN0LCByYWNpc3QsIGFibGVpc3QgY29tbWVudHM8L2xpPgogICAgICAgICAgPGxpPmNvbW1lbnRzIHRoYXQgY29udGFpbiBoYXJtZnVsIHN0ZXJlb3R5cGVzPC9saT4KICAgICAgICAgIDxsaT5jb21tZW50cyB0aGF0IGF0dGFjayBhIHBlcnNvbiBvciBhIG1pbm9yaXR5IGdyb3VwPC9saT4KICAgICAgICAgIDxsaT5jb21tZW50cyB0aGF0IHRocmVhdGVuIHNvbWVvbmU8L2xpPgogICAgICAgICAgPGxpPmNvbW1lbnRzIHRoYXQgd2FudCB0byBodXJ0IHNvbWVvbmUgYnkgbW9ja2luZyBob3cgdGhleSBmZWVsIG9yIHdoYXQgdGhleSBleHBlcmllbmNlZC48L2xpPgogICAgICAgICAgPGxpPmNvbW1lbnRzIHRoYXQgZG9uJ3QgbWFrZSBzZW5zZSwgb3IgYXJlIGp1c3QgdHJ5aW5nIHRvIHByb3Zva2UgYSByZWFjdGlvbiAodHJvbGxpbmcpIDwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9wPgogICAgICAKCiAgICAgIHt7ZW1vamkoMTI4MTczKX19IE5vdGU6IEEgY29tbWVudCBjYW4gY29udGFpbiA8Yj5iYWQgd29yZHM8L2I+IChwcm9mYW5pdHkpLCBhbmQgbm90IGJlIGNvbnNpZGVyZWQgdG94aWMuIAogICAgICAKICAgICAgPHA+CiAgICAgICAgTGV0J3MgY29udGludWUgdG8gYSBzaG9ydCB0cmFpbmluZyBwaGFzZSwgdG8gcHJvcGVybHkgdW5kZXJzdGFuZCB3aGF0IHlvdSBoYXZlIHRvIGRvIQogICAgICA8L3A+CiAgICA8L2Rpdj4KICAgIDwvSW5zdHJ1Y3Rpb25TY3JlZW4+CgogICAgCiAgICA8SW5zdHJ1Y3Rpb25TY3JlZW4gOnRpdGxlPSInUHJhY3RpY2UnIj4KICAgICAgPGRpdiBjbGFzcz0iaW5zdHJ1Y3Rpb25zdGV4dCI+CiAgICAgICAgPHA+CgkJCSAgTm93IHlvdSB3aWxsIHJlYWQgYSBmZXcgcHJhY3RpY2UgcXVlc3Rpb25zLiBSZWFkIHRoZSBpbnN0cnVjdGlvbnMgYW5kIHRoZSBmZWVkYmFjayBjYXJlZnVsbHksIGluIG9yZGVyIHRvIHVuZGVyc3RhbmQgdGhlIHRhc2suIAogICAgICAgIDxicj4KICAgICAgICBXaGVuIHlvdSBhcmUgcmVhZHksIGNsaWNrIHRoZSAiTkVYVCIgYnV0dG9uIHRvIDxiPnN0YXJ0IHRoZSBwcmFjdGljZSBzZXNzaW9uPC9iPiEKCQkJICA8L3A+CiAgICAgIDwvZGl2PgoJCTwvSW5zdHJ1Y3Rpb25TY3JlZW4+CiAgICAKCiAgICA8IS0tICp+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fiogIFRyYWluaW5nICAqfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fiogLS0+CiAgICA8IS0tICJbJ0FwcHJvdmUnLCAnUmVqZWN0J10iIC0tPgogICAgPCEtLSBQcmFjdGljZSB0cmlhbHMgLS0+CiAgICA8dGVtcGxhdGUgdi1mb3I9Iih0cmlhbCwgaSkgb2YgcHJhY3RpY2VfdHJpYWxzIj4KICAgICAgPCEtLSBUaGUgdGFzaywgd2hlcmUgdGhlIHBhcnRpY2lwYW50IGNhbiBtYWtlIGEgZGVjaXNpb24gIC0tPgogICAgICA8VHJpYWxTY3JlZW4gdi1pZj0iZ3JvdXA9PT0nc2NvcmUnIgogICAgICAgIDp0cmlhbD0idHJpYWwiCiAgICAgICAgOmtleT0iJ3RyYWluaW5nLXNjb3JlLScgKyBpIgogICAgICAgIDp0cmlhbFR5cGU9Iid0cmFpbmluZy10YXNrJyIKICAgICAgICA6dHJpYWxudW1iZXI9ImkiCiAgICAgICAgOnByb2dyZXNzPSJpIC8gcHJhY3RpY2VfdHJpYWxzLmxlbmd0aCIKICAgICAgICA6b3B0aW9ucz0iW2Vtb2ppKDk5ODkpKycgQXBwcm92ZScsIGVtb2ppKDEwMDYwKSArICcgUmVqZWN0J10iCiAgICAgICAgOnRleHQ9InRyaWFsLnRleHQiCiAgICAgICAgOmluc3RydWN0aW9ucz0iJ05vdGljZSB0aGUgVE9YSUNJVFkgU0NPUkUuIFJlamVjdCB0aGUgY29tbWVudCBpZiB5b3UgdGhpbmsgaXQgaXMgdG94aWMsIGFwcHJvdmUgaXQgb3RoZXJ3aXNlLiciCiAgICAgICAgOnF1ZXN0aW9uPSJlbW9qaSgxMjg3MTgpIgogICAgICAgIDp0YXNrPSJ0cnVlIgogICAgICAgIDpncm91cD1ncm91cAogICAgICAvPgoKICAgICAgPFRyaWFsU2NyZWVuIHYtZWxzZQogICAgICAgIDp0cmlhbD0idHJpYWwiCiAgICAgICAgOmtleT0iJ3RyYWluaW5nLW5vLXNjb3JlLScgKyBpIgogICAgICAgIDp0cmlhbFR5cGU9Iid0cmFpbmluZy10YXNrJyIKICAgICAgICA6dHJpYWxudW1iZXI9ImkiCiAgICAgICAgOnByb2dyZXNzPSJpIC8gcHJhY3RpY2VfdHJpYWxzLmxlbmd0aCIKICAgICAgICA6b3B0aW9ucz0iW2Vtb2ppKDk5ODkpKycgQXBwcm92ZScsIGVtb2ppKDEwMDYwKSArICcgUmVqZWN0J10iCiAgICAgICAgOnRleHQ9InRyaWFsLnRleHQiCiAgICAgICAgOmluc3RydWN0aW9ucz0iJ1JlamVjdCB0aGUgY29tbWVudCBpZiB5b3UgdGhpbmsgaXQgaXMgdG94aWMsIGFwcHJvdmUgaXQgb3RoZXJ3aXNlLiciCiAgICAgICAgOnF1ZXN0aW9uPSJlbW9qaSgxMjg3MTgpIgogICAgICAgIDp0YXNrPSJ0cnVlIgogICAgICAgIDpncm91cD1ncm91cAogICAgICAvPgogICAgICAKICAgICAgPFRyaWFsU2NyZWVuIHYtaWY9Imdyb3VwPT09J3Njb3JlJyIKICAgICAgICA6dHJpYWw9InRyaWFsIgogICAgICAgIDprZXk9Iid0cmFpbmluZy1tYW5pcHVsYXRpb24tY2hlY2stJyArIGkiCiAgICAgICAgOnRyaWFsLXR5cGU9Iid0cmFpbmluZy1hZ3JlZSciCiAgICAgICAgOnRyaWFsbnVtYmVyPSJpIgogICAgICAgIDpwcm9ncmVzcz0iaS9wcmFjdGljZV90cmlhbHMubGVuZ3RoIgogICAgICAgIDpvcHRpb25zPSJbJ1llcycsICdObyddIgogICAgICAgIDppbnN0cnVjdGlvbnM9IidBbnN3ZXIgdGhlIHF1ZXN0aW9uIHByb3ZpZGVkIGFib3V0IHRoZSBBSSBwcmVkaWN0aW9uIHNjb3JlLiciCiAgICAgICAgOnF1ZXN0aW9uPSInRG8geW91IHRoaW5rIHRoZSBBSSBwcmVkaWN0aW9uIHdhcyBjbG9zZT8nIgogICAgICAgIDp0ZXh0PSJ0cmlhbC50ZXh0IgogICAgICAgIDp0YXNrPSJ0cnVlIgogICAgICAgIDpncm91cD1ncm91cAogICAgICAvPgogICAgICAgICAgCiAgICAgIDwhLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIGNvbXByZWhlbnNpb24gcXVlc3Rpb24gIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0+CgogICAgICA8IS0tIGNvbXByZWhlbnNpb24gcXVlc3Rpb24gaXMgcHJvdmlkZWQgd2l0aCBhIGhpZ2hlciBwcm9iYWJpbGl0eSBkdXJpbmcgdGhlIHByYWN0aWNlIHBoYXNlIC0tPgogICAgICA8VHJpYWxTY3JlZW4gdi1pZj0iTWF0aC5yYW5kb20oKSA8IDAuOCIKICAgICAgICA6dHJpYWw9InRyaWFsIgogICAgICAgIDprZXk9Iid0cmFpbmluZy1jb21wcmVoZW5zaW9uLScgKyBpIgogICAgICAgIDp0cmlhbFR5cGU9Iid0cmFpbmluZy1jb21wcmVoZW5zaW9uJyIKICAgICAgICA6dHJpYWxudW1iZXI9ImkiCiAgICAgICAgOnByb2dyZXNzPSJpIC8gcHJhY3RpY2VfdHJpYWxzLmxlbmd0aCIKICAgICAgICA6b3B0aW9ucz0iWydZZXMnLCAnTm8nXSIKICAgICAgICA6dGV4dD1jb21wcmVoZW5zaW9uX3F1ZXN0aW9uCiAgICAgICAgOmluc3RydWN0aW9ucz0iJ0Fuc3dlciB0aGUgcXVlc3Rpb24gYmVsb3cgYmFzZWQgb24gdGhlIGNvbW1lbnQgeW91IHJlYWQgYmVmb3JlLiBUaGlzIHF1ZXN0aW9uIHdpbGwgb25seSBzaG93IHVwIHNvbWV0aW1lcy4nIgogICAgICAgIDp0YXNrPSJmYWxzZSIKICAgICAgICA6Y29tcHJlaGVuc2lvbj0idHJ1ZSIKICAgICAgICA6Z3JvdXA9Z3JvdXAKICAgICAgLz4KICAgIDwvdGVtcGxhdGU+CiAgICAgIAoKICAgIDwhLS0gKn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+KiAgRXhwZXJpbWVudCAgKn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qfn5+Kn5+fip+fn4qIC0tPgoKICAgIDwhLS0gVGhlIGV4cGVyaW1lbnQgcGhhc2UgIC0tPgogICAgPFNjcmVlbiA6dGl0bGU9IidFeHBlcmltZW50JyIgbGFiZWw9ImV4cGVyaW1lbnQiPgoJCQlQcmFjdGljZSByb3VuZCBpcyBvdmVyISBJbiB0aGUgbmV4dCBwaGFzZSB5b3Ugd2lsbCBnZXQgbm8gZmVlZGJhY2suIFJlYWQgZWFjaCBjb21tZW50IGNhcmVmdWxseSBhbmQgbWFrZSBhIGRlY2lzaW9uIGFjY29yZGluZyB0byB3aGF0IHlvdSB0aGluayBpcyBjb3JyZWN0LgoJCQk8YnI+CgkJCTxicj4KCQkJV2hlbiB5b3UgYXJlIHJlYWR5LCA8Yj5jbGljayB0aGUgYnV0dG9uIHRvIHN0YXJ0IHRoZSBleHBlcmltZW50PC9iPi4KCQkJPGJ1dHRvbiBAY2xpY2s9IiRtYWdwaWUubmV4dFNjcmVlbigpOyI+CgkJCQlTdGFydAoJCQk8L2J1dHRvbj4KCQk8L1NjcmVlbj4KICA8IS0tIFRyaWFscyAtLT4KICAgIDx0ZW1wbGF0ZSB2LWZvcj0iKHRyaWFsLCBpKSBvZiBtYWluX3RyaWFscyIgPgogICAgICA8IS0tIFRoZSB0YXNrLCB3aGVyZSB0aGUgcGFydGljaXBhbnQgY2FuIG1ha2UgYSBkZWNpc2lvbiAgLS0+CiAgICAgIDxUcmlhbFNjcmVlbgogICAgICAgIDp0cmlhbD0idHJpYWwiCiAgICAgICAgOmtleT0iJ2V4cGVyaW1lbnQtJyArIGkiCiAgICAgICAgOnRyaWFsLXR5cGU9IidleHBlcmltZW50LXRhc2snIgogICAgICAgIDp0cmlhbG51bWJlcj0iaSIKICAgICAgICA6cHJvZ3Jlc3M9ImkvbWFpbl90cmlhbHMubGVuZ3RoIgogICAgICAgIDpvcHRpb25zPSJbZW1vamkoOTk4OSkrJyBBcHByb3ZlJywgZW1vamkoMTAwNjApICsgJyBSZWplY3QnXSIKICAgICAgICA6dGV4dD0idHJpYWwudGV4dCIKICAgICAgICA6dGFzaz0idHJ1ZSIKICAgICAgICA6cXVlc3Rpb249ImVtb2ppKDEyODcxOCkiCiAgICAgICAgOmdyb3VwPWdyb3VwCiAgICAgIC8+CgogICAgICA8VHJpYWxTY3JlZW4gdi1pZj0iZ3JvdXA9PT0nc2NvcmUnIgogICAgICAgIDp0cmlhbD0idHJpYWwiCiAgICAgICAgOmtleT0iJ2V4cGVyaW1lbnQtbWFuaXB1bGF0aW9uLWNoZWNrLScgKyBpIgogICAgICAgIDp0cmlhbC10eXBlPSInZXhwZXJpbWVudC1hZ3JlZSciCiAgICAgICAgOnRyaWFsbnVtYmVyPSJpIgogICAgICAgIDpwcm9ncmVzcz0iaS9tYWluX3RyaWFscy5sZW5ndGgiCiAgICAgICAgOm9wdGlvbnM9IlsnWWVzJywgJ05vJ10iCiAgICAgICAgOnF1ZXN0aW9uPSInRG8geW91IHRoaW5rIHRoZSBBSSBwcmVkaWN0aW9uIHdhcyBjbG9zZT8nIgogICAgICAgIDp0ZXh0PSJ0cmlhbC50ZXh0IgogICAgICAgIDp0YXNrPSJ0cnVlIgogICAgICAgIDpncm91cD1ncm91cAogICAgICAvPgoKICA8IS0tIENvbXByZWhlbnNpb24gcXVlc3Rpb24gaXMgcHJvdmlkZWQgd2l0aCBhIGxvd2VyIHByb2JhYmlsaXR5IGluIHRoZSBleHBlcmltZW50IHBoYXNlIC0tPgogIDxUcmlhbFNjcmVlbiB2LWlmPSJNYXRoLnJhbmRvbSgpIDwgMC4yIgogICAgICAgIDp0cmlhbD0idHJpYWwiCiAgICAgICAgOmtleT0iJ2V4cGVyaW1lbnQtY29tcHJlaGVuc2lvbi0nICsgaSIKICAgICAgICA6dHJpYWxUeXBlPSInZXhwZXJpbWVudC1jb21wcmVoZW5zaW9uJyIKICAgICAgICA6dHJpYWxudW1iZXI9ImkiCiAgICAgICAgOnByb2dyZXNzPSJpIC8gbWFpbl90cmlhbHMubGVuZ3RoIgogICAgICAgIDpvcHRpb25zPSJbJ1llcycsICdObyddIgogICAgICAgIDp0ZXh0PWNvbXByZWhlbnNpb25fcXVlc3Rpb24KICAgICAgICA6dGFzaz0iZmFsc2UiCiAgICAgICAgOmNvbXByZWhlbnNpb249InRydWUiCiAgICAgICAgOmdyb3VwPWdyb3VwCiAgICAgIC8+CiAgICA8L3RlbXBsYXRlPgoKICAgIDxJbnN0cnVjdGlvblNjcmVlbiA6dGl0bGU9IidBbG1vc3QgZG9uZSEnIj4KICAgICAgPGRpdiBjbGFzcz0iaW5zdHJ1Y3Rpb25zdGV4dCI+CiAgICAgICAgPHA+CgkJCSAgPGI+UGxlYXNlIHN0YXkgd2l0aCB1cyBqdXN0IGEgYml0IGxvbmdlciEge3tlbW9qaSg5NzQ5KX19PC9iPgogICAgICAgIDxicj4KICAgICAgICBPbiB0aGUgbmV4dCBzY3JlZW4geW91IGNhbiBmaWxsIG91dCBzb21lIHBlcnNvbmFsIGluZm9ybWF0aW9uLiBJZiB5b3Ugc3R1ZHkgYXQgdGhlIE9zbmFicnVlY2sgVW5pdmVyc2l0eSwgeW91IGNhbiBlYXJuIDEvMiBWUCBmb3IgeW91ciBwYXJ0aWNpcGF0aW9uLiAKICAgICAgICBJbiBvcmRlciB0byBjbGFpbSB0aGF0LCBwbGVhc2Ugc3VibWl0IHlvdXIgPGI+TWF0cmlrZWxudW1tZXI8L2I+IGFuZCA8Yj5mdWxsIG5hbWU8L2I+LiAgCiAgICAgICAgPGJyPgoJCQkgIDwvcD4KICAgICAgPC9kaXY+CgkJPC9JbnN0cnVjdGlvblNjcmVlbj4KICAgICAgCiAgICA8UG9zdFRlc3RTY3JlZW4gOmVkdWNhdGlvbj0iZmFsc2UiIDphZ2U9ImZhbHNlIiA6Z2VuZGVyPSJmYWxzZSIgOmNvbW1lbnRzPSJmYWxzZSIgOmxhbmd1YWdlcz0iZmFsc2UiPgogICAgICA8dGVtcGxhdGUgI2RlZmF1bHQ+CiAgICAgICAgPGxhYmVsPkZ1bGwgbmFtZSAob25seSBmb3IgY2xhaW1pbmcgVlAgaG91cnMpPGlucHV0IHR5cGU9InRleHQiIHYtbW9kZWw9JG1hZ3BpZS5tZWFzdXJlbWVudHMubmFtZT48L2xhYmVsPgogICAgICAgIDxsYWJlbD5NYXRyaWtlbG51bW1lciAob25seSBmb3IgY2xhaW1pbmcgVlAgaG91cnMpPGlucHV0IHR5cGU9InRleHQiIHYtbW9kZWw9JG1hZ3BpZS5tZWFzdXJlbWVudHMubWF0cmlrZWxucj48L2xhYmVsPgogICAgICAgIDxsYWJlbD5OYXRpdmUgbGFuZ3VhZ2Uocyk8aW5wdXQgdHlwZT0idGV4dCIgdi1tb2RlbD0kbWFncGllLm1lYXN1cmVtZW50cy5sYW5ndWFnZXM+PC9sYWJlbD4KICAgICAgICA8bGFiZWw+QWdlIDxicj48aW5wdXQgdi1tb2RlbD0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuYWdlIiB0eXBlPSJudW1iZXIiIG1heD0iMTEwIiBtaW49IjE4Ii8+PC9sYWJlbD4KICAgICAgICA8YnI+ICAKICAgICAgICA8bGFiZWw+R2VuZGVyCiAgICAgICAgICAgIDxEcm9wZG93bklucHV0IDpvcHRpb25zPSJbCiAgICAgICAgICAgICAgICAgICAgICAnJywKICAgICAgICAgICAgICAgICAgICAgICdOb24tYmluYXJ5JywKICAgICAgICAgICAgICAgICAgICAgICdGZW1hbGUnLAogICAgICAgICAgICAgICAgICAgICAgJ01hbGUnLAogICAgICAgICAgICAgICAgICAgICAgJ090aGVyJywKICAgICAgICAgICAgICAgICAgICAgIF0iCiAgICAgICAgICAgICAgICAgICAgOnJlc3BvbnNlLnN5bmM9IiRtYWdwaWUubWVhc3VyZW1lbnRzLmdlbmRlciIvPgogICAgICAgIDwvbGFiZWw+CiAgICAgICAgPGxhYmVsPkRvIHlvdSBiZWxvbmcgdG8gYW55IGlkZW50aXR5IGdyb3Vwcz8gCiAgICAgICAgICAgIDxEcm9wZG93bklucHV0IDpvcHRpb25zPSJbCiAgICAgICAgICAgICAgICAgICAgICAnJywKICAgICAgICAgICAgICAgICAgICAgICdJIGRvIG5vdCBiZWxvbmcgdG8gYW55IGlkZW50aXR5IGdyb3Vwcy4nLAogICAgICAgICAgICAgICAgICAgICAgJ0xHQlRRJywKICAgICAgICAgICAgICAgICAgICAgICdQZW9wbGUgd2l0aCBkaXNhYmlsaXRpZXMnLAogICAgICAgICAgICAgICAgICAgICAgJ1JhY2lhbC9FdGhuaWMgbWlub3JpdHknLAogICAgICAgICAgICAgICAgICAgICAgJ1JlbGlnaW91cyBtaW5vcml0eScsCiAgICAgICAgICAgICAgICAgICAgICAnTmV1cm9kaXZlcmdlbnQgcGVvcGxlJywKICAgICAgICAgICAgICAgICAgICAgICdHZW5kZXIgbWlub3JpdHknLAogICAgICAgICAgICAgICAgICAgICAgJ090aGVyJwogICAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICA6cmVzcG9uc2Uuc3luYz0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuaWRlbnRpdHkiLz4KICAgICAgICA8L2xhYmVsPgogICAgICAgIDxsYWJlbD5IYXZlIHlvdSBldmVyIG1vZGVyYXRlZCBvbmxpbmUgY29udGVudCwgZWl0aGVyIGFzIGEgdm9sdW50ZWVyIG9yIGZvciByZW11bmVyYXRpb24/CiAgICAgICAgICAgIDxEcm9wZG93bklucHV0IDpvcHRpb25zPSJbCiAgICAgICAgICAgICAgICAgICAgICAnJywKICAgICAgICAgICAgICAgICAgICAgICdZZXMnLAogICAgICAgICAgICAgICAgICAgICAgJ05vJwogICAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICA6cmVzcG9uc2Uuc3luYz0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuYWN0aXZpc20iLz4KICAgICAgICA8L2xhYmVsPgogICAgICA8L3RlbXBsYXRlPgogICAgPC9Qb3N0VGVzdFNjcmVlbj4KICAgIDxTdWJtaXRSZXN1bHRzU2NyZWVuIC8+CiAgPC9FeHBlcmltZW50Pgo="},null]}