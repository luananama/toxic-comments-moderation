{"remainingRequest":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\thesis\\toxic-comments-moderation\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\thesis\\toxic-comments-moderation\\src\\TrialScreen.vue?vue&type=template&id=60a862b9&","dependencies":[{"path":"C:\\thesis\\toxic-comments-moderation\\src\\TrialScreen.vue","mtime":1674142607927},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651676244570},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\index.js","mtime":1651676243816}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}