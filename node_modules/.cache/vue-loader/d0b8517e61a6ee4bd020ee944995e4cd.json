{"remainingRequest":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\thesis\\toxic-comments-moderation\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\thesis\\toxic-comments-moderation\\src\\App.vue","mtime":1658927489751},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651676242449},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651676244489},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\postcss-loader\\src\\index.js","mtime":1651676243373},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\toxic-comments-moderation\\node_modules\\vue-loader\\lib\\index.js","mtime":1651676243816}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KLmluc3RydWN0aW9uc3RleHQgew0KICAgIGZvbnQtZmFtaWx5OiAiT3BlbiBTYW5zIiwgc2Fucy1zZXJpZiwgSGVsdmV0aWNhLCBBcmlhbDsNCiAgICBmb250LXNpemU6IDE4cHg7DQogICAgbGluZS1oZWlnaHQ6IDMwcHg7DQogICAgZm9udC13ZWlnaHQ6IDMwMDsNCiAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICAgIHBhZGRpbmc6IDIwcHg7DQogICAgY29sb3I6ICMzNzM0MzQ7DQp9DQoNCi8qIEBmb250LWZhY2Ugew0KICBmb250LWZhbWlseTogIk9wZW5TYW5zIjsNCiAgc3JjOiBsb2NhbCgiT3BlblNhbnMiKSwNCiAgIHVybCguL2ZvbnRzL09wZW5TYW5zLVJlZ3VsYXIudHRmKSBmb3JtYXQoInRydWV0eXBlIik7DQp9ICAqLw0KDQpAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU9wZW4rU2Fucyk7DQoNCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <Experiment title=\"Moderation of online comments\">\r\n\r\n  <!-- *~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*  Instructions  *~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~* -->\r\n\r\n    <!-- sensitive content warning -->\r\n    <InstructionScreen :title=\"'Warning'\">\r\n      <div class=\"instructionstext\">\r\n        The present experiment contains words that can be perceived as offensive or triggering by some. Although the amount of such words has been kept to a minimum necessary for the task, please only continue participating if you are not upset by profanity, insults or controversial statements.\r\n      </div>\r\n    </InstructionScreen>\r\n\r\n    <!-- describe the task -->\r\n    <InstructionScreen :title=\"'Instructions'\">\r\n        <div class=\"instructionstext\">\r\n          <p>\r\n            It's easy to be mean on the internet. Today you will take the role of a <b>moderator</b> and try to keep online conversations civilized, nice and with no mean comments.\r\n          </p>\r\n\r\n          <p> \r\n            Your task is to read comments from online conversations on platforms like twitter, reddit, or wikipedia talk, and decide if they should be published online (<b>APPROVE</b>), or deleted (<b>REJECT</b>) \r\n          </p>  \r\n          <p> \r\n            To help you, an AI will <i>sometimes</i> show you how likely it is that a comment is <b>toxic</b>. Use this score, but don't rely too much on it, as it doesn't always work as it should.\r\n          </p>\r\n          <p> \r\n            One more thing: every now and then you will be asked to <b>answer a question</b> (<i>\"{{comprehension_question}}\"</i>) about the comment you just read, so always pay attention to the text! \r\n          </p>\r\n        </div>\r\n    </InstructionScreen>\r\n\r\n \r\n <!-- You will also randomly receive a comprehension question refering to the content of the comment you just read, which you must answer without looking at the text again. -->\r\n        \r\n    <InstructionScreen :title=\"'Instructions'\">\r\n    <div contenteditable=\"true\" class=\"instructionstext\">\r\n      <p>\r\n        Here are some examples of comments that are toxic and we want to reject:\r\n        <ul>\r\n          <li>a hate comment</li>\r\n          <li>a comment that attacks a person, group or minority</li>\r\n          <li>a comment that dismisses someone's personal experience, especially in an insulting way, or if the person is part of a minority group</li>\r\n          <li>a nonsensical comment that adds nothing productive to the conversation</li>\r\n          <li>a sexist, racist comment, or one that contains harmful stereotypes about a minority group</li>\r\n        </ul>\r\n      </p>\r\n    \r\n      Note: A comment can contain <b>profanity</b>, and not be considered toxic. \r\n      \r\n      <p>\r\n        Let's continue to a short training phase, to properly understand the task!\r\n      </p>\r\n    </div>\r\n    </InstructionScreen>\r\n\r\n    \r\n    <InstructionScreen :title=\"'Practice'\">\r\n      <div class=\"instructionstext\">\r\n        <p>\r\n\t\t\t  Now you will read a series of practice questions. Read the instructions and the feedback carefully, in order to understand the task. \r\n        <br>\r\n        When you are ready, click the button to <b>start the practice session</b>!\r\n\t\t\t  </p>\r\n      </div>\r\n\t\t</InstructionScreen>\r\n    \r\n\r\n    <!-- *~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*  Training  *~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~* -->\r\n\r\n    <!-- Practice trials -->\r\n    <template v-for=\"(trial, i) of practice_trials\">\r\n      <!-- Provide the plain text for the participant to read before the task -->\r\n\r\n       <TrialScreen\r\n        :trial=\"trial\"\r\n        :key=\"'training-' + i\"\r\n        :trialType=\"'training'\"\r\n        :trialnumber=\"i\"\r\n        :progress=\"i / practice_trials.length\"\r\n        :options=\"['I have read the text']\"\r\n        :text=\"trial.text\"\r\n        :instructions=\"'Read the text below.'\"\r\n        :task=\"false\"\r\n      />\r\n      \r\n      <!-- Comprehension question is provided with a higher probability than in the experiment phase -->\r\n      <TrialScreen v-if=\"Math.random() < 0.8\"\r\n        :trial=\"trial\"\r\n        :key=\"'training-' + i\"\r\n        :trialType=\"'training'\"\r\n        :trialnumber=\"i\"\r\n        :progress=\"i / practice_trials.length\"\r\n        :options=\"['Yes', 'No']\"\r\n        :text=comprehension_question\r\n        :instructions=\"'Answer the question below based on the text you previously read.'\"\r\n        :task=\"false\"\r\n        :comprehension=\"true\"\r\n      />\r\n\r\n      <!-- The task, where the participant can make a decision  -->\r\n      <TrialScreen\r\n        :trial=\"trial\"\r\n        :key=\"'training-' + i\"\r\n        :trialType=\"'training'\"\r\n        :trialnumber=\"i\"\r\n        :progress=\"i / practice_trials.length\"\r\n        :options=\"['Approve', 'Reject']\"\r\n        :text=\"trial.text\"\r\n        :instructions=\"'Notice the TOXICITY SCORE. Approve or reject the comment.'\"\r\n        :task=\"true\"\r\n      />\r\n    </template>\r\n\r\n\r\n    <!-- *~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*  Experiment  *~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~*~~~* -->\r\n\r\n    <!-- The experiment phase  -->\r\n    <Screen :title=\"'Experiment'\">\r\n\t\t\tPractice round is over! The next questions will provide no feedback. Read each one carefully and make a decision according to what you think is correct.\r\n\t\t\t<br>\r\n\t\t\t<br>\r\n\t\t\tWhen you are ready, <b>click the button to start the experiment</b>.\r\n\t\t\t<button @click=\"$magpie.nextScreen();\">\r\n\t\t\t\tStart\r\n\t\t\t</button>\r\n\t\t</Screen>\r\n\r\n  <!-- Trials -->\r\n    <template v-for=\"(trial, i) of main_trials\" >\r\n      <!-- Provide the plain text for the participant to read before the task -->     \r\n     <TrialScreen\r\n        :trial=\"trial\"\r\n        :key=\"'experiment-' + i\"\r\n        :trial-type=\"'experiment'\"\r\n        :trialnumber=\"i\"\r\n        :progress=\"i/main_trials.length\"\r\n        :options=\"['I have read the text']\"\r\n        :text=\"trial.text\"\r\n        :task=\"false\"\r\n      />\r\n\r\n      \r\n      <!-- Comprehension question is provided with a higher probability than in the experiment phase -->\r\n      <TrialScreen v-if=\"Math.random() < 0.2\"\r\n        :trial=\"trial\"\r\n        :key=\"'experiment-' + i\"\r\n        :trialType=\"'experiment'\"\r\n        :trialnumber=\"i\"\r\n        :progress=\"i / main_trials.length\"\r\n        :options=\"['Yes', 'No']\"\r\n        :text=comprehension_question\r\n        :task=\"false\"\r\n        :comprehension=\"true\"\r\n      />\r\n\r\n      <!-- The task, where the participant can make a decision  -->\r\n      <TrialScreen\r\n        :trial=\"trial\"\r\n        :key=\"'experiment-' + i\"\r\n        :trial-type=\"'experiment'\"\r\n        :trialnumber=\"i\"\r\n        :progress=\"i/main_trials.length\"\r\n        :options=\"['Approve', 'Reject']\"\r\n        :text=\"trial.text\"\r\n        :task=\"true\"\r\n      />\r\n    </template>\r\n\r\n    <PostTestScreen />\r\n\r\n    <DebugResultsScreen />\r\n  </Experiment>\r\n</template>\r\n\r\n<script>\r\n// Load data from csv files as javascript arrays with objects\r\nimport practice from '../trials/training.csv';\r\nimport main from '../trials/main.csv';\r\nimport TrialScreen from './TrialScreen.vue';\r\nimport _ from 'lodash';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {TrialScreen},\r\n  data() {\r\n    // randomly sample n items for the practice phase\r\n    const practice_trials = _.sampleSize(_.shuffle(practice), 1);\r\n    const main_trials = _.sampleSize(_.shuffle(main), 6);\r\n\r\n    const comprehension_question = \"Does the comment reference a group that is considered vulnerable, disadvantaged, or often discriminated against?\";\r\n    // \r\n    return {\r\n      practice_trials,\r\n      main_trials,\r\n      comprehension_question,\r\n      // Expose lodash.range to template above\r\n      range: _.range\r\n      \r\n    };\r\n  },\r\n};\r\n\r\n</script>\r\n<style>\r\n\r\n.instructionstext {\r\n    font-family: \"Open Sans\", sans-serif, Helvetica, Arial;\r\n    font-size: 18px;\r\n    line-height: 30px;\r\n    font-weight: 300;\r\n    text-align: left;\r\n    padding: 20px;\r\n    color: #373434;\r\n}\r\n\r\n/* @font-face {\r\n  font-family: \"OpenSans\";\r\n  src: local(\"OpenSans\"),\r\n   url(./fonts/OpenSans-Regular.ttf) format(\"truetype\");\r\n}  */\r\n\r\n@import url(https://fonts.googleapis.com/css2?family=Open+Sans);\r\n\r\n</style>"]}]}