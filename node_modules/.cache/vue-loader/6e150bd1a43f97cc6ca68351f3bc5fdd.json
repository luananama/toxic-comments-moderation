{"remainingRequest":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\magpie-base\\src\\components\\inputs\\DropdownInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\magpie-base\\src\\components\\inputs\\DropdownInput.vue","mtime":1656594654759},{"path":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\vue-loader\\lib\\index.js","mtime":1651676243816}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qKgogKiBIYXZlIHlvdXIgcGFydGljaXBhbnRzIHByb3ZpZGUgYSB0ZXh0IGFuc3dlcgogKi8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEcm9wZG93bklucHV0JywKICBwcm9wczogewogICAgb3B0aW9uczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["DropdownInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DropdownInput.vue","sourceRoot":"node_modules/magpie-base/src/components/inputs","sourcesContent":["<docs>\n```vue\n<Experiment>\n    <Screen>\n\n      <Slide>\n        <p>Fries or soup?</p>\n        <DropdownInput\n            :options=\"['fries', 'soup']\"\n            :response.sync= \"$magpie.measurements.lunch\"\n          />\n        <p v-if= \"$magpie.measurements.lunch === 'soup'\">I disagree!</p>\n        <button @click=\"$magpie.saveAndNextScreen\">Submit</button>\n      </Slide>\n\n    </Screen>\n\n    <DebugResultsScreen />\n\n</Experiment>\n```\n</docs>\n\n<template>\n  <div class=\"dropdown-input\">\n    <select ref=\"input\" @change=\"$emit('update:response', $refs.input.value)\">\n      <option\n        v-for=\"option of options\"\n        :key=\"option\"\n        :value=\"option\"\n        v-text=\"option\"\n      ></option>\n    </select>\n  </div>\n</template>\n\n<script>\n/**\n * Have your participants provide a text answer\n */\nexport default {\n  name: 'DropdownInput',\n  props: {\n    options: {\n      type: Array,\n      required: true\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"]}]}