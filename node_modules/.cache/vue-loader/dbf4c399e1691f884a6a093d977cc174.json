{"remainingRequest":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\src\\App.vue?vue&type=template&id=ba0a36f4&","dependencies":[{"path":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\src\\App.vue","mtime":1658850467554},{"path":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1651676244570},{"path":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\thesis-toxicity-score-moderation\\experiment\\node_modules\\vue-loader\\lib\\index.js","mtime":1651676243816}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0V4cGVyaW1lbnQnLHthdHRyczp7InRpdGxlIjoiTW9kZXJhdGlvbiBvZiBvbmxpbmUgY29tbWVudHMifX0sW19jKCdJbnN0cnVjdGlvblNjcmVlbicse2F0dHJzOnsidGl0bGUiOidXYXJuaW5nJ319LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imluc3RydWN0aW9uc3RleHQifSxbX3ZtLl92KCIgVGhlIHByZXNlbnQgZXhwZXJpbWVudCBjb250YWlucyB3b3JkcyB0aGF0IGNhbiBiZSBwZXJjZWl2ZWQgYXMgb2ZmZW5zaXZlIG9yIHRyaWdnZXJpbmcgYnkgc29tZS4gQWx0aG91Z2ggdGhlIGFtb3VudCBvZiBzdWNoIHdvcmRzIGhhcyBiZWVuIGtlcHQgdG8gYSBtaW5pbXVtIG5lY2Vzc2FyeSBmb3IgdGhlIHRhc2ssIHBsZWFzZSBvbmx5IGNvbnRpbnVlIHBhcnRpY2lwYXRpbmcgaWYgeW91IGFyZSBub3QgdXBzZXQgYnkgcHJvZmFuaXR5LCBpbnN1bHRzIG9yIGNvbnRyb3ZlcnNpYWwgc3RhdGVtZW50cy4gIildKV0pLF9jKCdJbnN0cnVjdGlvblNjcmVlbicse2F0dHJzOnsidGl0bGUiOidJbnN0cnVjdGlvbnMnfX0sW19jKCdkaXYnLHtzdGF0aWNDbGFzczoiaW5zdHJ1Y3Rpb25zdGV4dCJ9LFtfYygncCcsW192bS5fdigiIEl0J3MgZWFzeSB0byBiZSBtZWFuIG9uIHRoZSBpbnRlcm5ldC4gVG9kYXkgeW91IHdpbGwgdGFrZSB0aGUgcm9sZSBvZiBhICIpLF9jKCdiJyxbX3ZtLl92KCJtb2RlcmF0b3IiKV0pLF92bS5fdigiIGFuZCB0cnkgdG8ga2VlcCBvbmxpbmUgY29udmVyc2F0aW9ucyBjaXZpbGl6ZWQsIG5pY2UgYW5kIHdpdGggbm8gbWVhbiBjb21tZW50cy4gIildKSxfYygncCcsW192bS5fdigiIFlvdXIgdGFzayBpcyB0byByZWFkIGNvbW1lbnRzIGZyb20gb25saW5lIGNvbnZlcnNhdGlvbnMgb24gcGxhdGZvcm1zIGxpa2UgdHdpdHRlciwgcmVkZGl0LCBvciB3aWtpcGVkaWEgdGFsaywgYW5kIGRlY2lkZSBpZiB0aGV5IHNob3VsZCBiZSBwdWJsaXNoZWQgb25saW5lICgiKSxfYygnYicsW192bS5fdigiQVBQUk9WRSIpXSksX3ZtLl92KCIpLCBvciBkZWxldGVkICgiKSxfYygnYicsW192bS5fdigiUkVKRUNUIildKSxfdm0uX3YoIikgIildKSxfYygncCcsW192bS5fdigiIFRvIGhlbHAgeW91LCBhbiBBSSB3aWxsICIpLF9jKCdpJyxbX3ZtLl92KCJzb21ldGltZXMiKV0pLF92bS5fdigiIHNob3cgeW91IGhvdyBsaWtlbHkgaXQgaXMgdGhhdCBhIGNvbW1lbnQgaXMgIiksX2MoJ2InLFtfdm0uX3YoInRveGljIildKSxfdm0uX3YoIi4gVXNlIHRoaXMgc2NvcmUsIGJ1dCBkb24ndCByZWx5IHRvbyBtdWNoIG9uIGl0LCBhcyBpdCBkb2Vzbid0IGFsd2F5cyB3b3JrIGFzIGl0IHNob3VsZC4gIildKSxfYygncCcsW192bS5fdigiIE9uZSBtb3JlIHRoaW5nOiBldmVyeSBub3cgYW5kIHRoZW4geW91IHdpbGwgYmUgYXNrZWQgdG8gIiksX2MoJ2InLFtfdm0uX3YoImFuc3dlciBhIHF1ZXN0aW9uIildKSxfdm0uX3YoIiAoIiksX2MoJ2knLFtfdm0uX3YoIlwiIitfdm0uX3MoX3ZtLmNvbXByZWhlbnNpb25fcXVlc3Rpb24pKyJcIiIpXSksX3ZtLl92KCIpIGFib3V0IHRoZSBjb21tZW50IHlvdSBqdXN0IHJlYWQsIHNvIGFsd2F5cyBwYXkgYXR0ZW50aW9uIHRvIHRoZSB0ZXh0ISAiKV0pXSldKSxfYygnSW5zdHJ1Y3Rpb25TY3JlZW4nLHthdHRyczp7InRpdGxlIjonSW5zdHJ1Y3Rpb25zJ319LFtfYygnZGl2Jyx7c3RhdGljQ2xhc3M6Imluc3RydWN0aW9uc3RleHQiLGF0dHJzOnsiY29udGVudGVkaXRhYmxlIjoidHJ1ZSJ9fSxbX2MoJ3AnLFtfdm0uX3YoIiBIZXJlIGFyZSBzb21lIGV4YW1wbGVzIG9mIGNvbW1lbnRzIHRoYXQgYXJlIHRveGljIGFuZCB3ZSB3YW50IHRvIHJlamVjdDogIiksX2MoJ3VsJyxbX2MoJ2xpJyxbX3ZtLl92KCJhIGhhdGUgY29tbWVudCIpXSksX2MoJ2xpJyxbX3ZtLl92KCJhIGNvbW1lbnQgdGhhdCBhdHRhY2tzIGEgcGVyc29uLCBncm91cCBvciBtaW5vcml0eSIpXSksX2MoJ2xpJyxbX3ZtLl92KCJhIGNvbW1lbnQgdGhhdCBkaXNtaXNzZXMgc29tZW9uZSdzIHBlcnNvbmFsIGV4cGVyaWVuY2UsIGVzcGVjaWFsbHkgaW4gYW4gaW5zdWx0aW5nIHdheSwgb3IgaWYgdGhlIHBlcnNvbiBpcyBwYXJ0IG9mIGEgbWlub3JpdHkgZ3JvdXAiKV0pLF9jKCdsaScsW192bS5fdigiYSBub25zZW5zaWNhbCBjb21tZW50IHRoYXQgYWRkcyBub3RoaW5nIHByb2R1Y3RpdmUgdG8gdGhlIGNvbnZlcnNhdGlvbiIpXSksX2MoJ2xpJyxbX3ZtLl92KCJhIHNleGlzdCwgcmFjaXN0IGNvbW1lbnQsIG9yIG9uZSB0aGF0IGNvbnRhaW5zIGhhcm1mdWwgc3RlcmVvdHlwZXMgYWJvdXQgYSBtaW5vcml0eSBncm91cCIpXSldKV0pLF92bS5fdigiIE5vdGU6IEEgY29tbWVudCBjYW4gY29udGFpbiAiKSxfYygnYicsW192bS5fdigicHJvZmFuaXR5IildKSxfdm0uX3YoIiwgYW5kIG5vdCBiZSBjb25zaWRlcmVkIHRveGljLiAiKSxfYygncCcsW192bS5fdigiIExldCdzIGNvbnRpbnVlIHRvIGEgc2hvcnQgdHJhaW5pbmcgcGhhc2UsIHRvIHByb3Blcmx5IHVuZGVyc3RhbmQgdGhlIHRhc2shICIpXSldKV0pLF9jKCdJbnN0cnVjdGlvblNjcmVlbicse2F0dHJzOnsidGl0bGUiOidQcmFjdGljZSd9fSxbX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJpbnN0cnVjdGlvbnN0ZXh0In0sW19jKCdwJyxbX3ZtLl92KCIgTm93IHlvdSB3aWxsIHJlYWQgYSBzZXJpZXMgb2YgcHJhY3RpY2UgcXVlc3Rpb25zLiBSZWFkIHRoZSBpbnN0cnVjdGlvbnMgYW5kIHRoZSBmZWVkYmFjayBjYXJlZnVsbHksIGluIG9yZGVyIHRvIHVuZGVyc3RhbmQgdGhlIHRhc2suICIpLF9jKCdicicpLF92bS5fdigiIFdoZW4geW91IGFyZSByZWFkeSwgY2xpY2sgdGhlIGJ1dHRvbiB0byAiKSxfYygnYicsW192bS5fdigic3RhcnQgdGhlIHByYWN0aWNlIHNlc3Npb24iKV0pLF92bS5fdigiISAiKV0pXSldKSxfdm0uX2woKF92bS5wcmFjdGljZV90cmlhbHMpLGZ1bmN0aW9uKHRyaWFsLGkpe3JldHVybiBbX2MoJ1RyaWFsU2NyZWVuJyx7a2V5Oid0cmFpbmluZy0nICsgaSxhdHRyczp7InRyaWFsIjp0cmlhbCwidHJpYWxUeXBlIjondHJhaW5pbmcnLCJ0cmlhbG51bWJlciI6aSwicHJvZ3Jlc3MiOmkgLyBfdm0ucHJhY3RpY2VfdHJpYWxzLmxlbmd0aCwib3B0aW9ucyI6WydJIGhhdmUgcmVhZCB0aGUgdGV4dCddLCJ0ZXh0Ijp0cmlhbC50ZXh0LCJpbnN0cnVjdGlvbnMiOidSZWFkIHRoZSB0ZXh0IGJlbG93LicsInRhc2siOmZhbHNlfX0pLChNYXRoLnJhbmRvbSgpIDwgMC44KT9fYygnVHJpYWxTY3JlZW4nLHtrZXk6J3RyYWluaW5nLScgKyBpLGF0dHJzOnsidHJpYWwiOnRyaWFsLCJ0cmlhbFR5cGUiOid0cmFpbmluZycsInRyaWFsbnVtYmVyIjppLCJwcm9ncmVzcyI6aSAvIF92bS5wcmFjdGljZV90cmlhbHMubGVuZ3RoLCJvcHRpb25zIjpbJ1llcycsICdObyddLCJ0ZXh0Ijpfdm0uY29tcHJlaGVuc2lvbl9xdWVzdGlvbiwiaW5zdHJ1Y3Rpb25zIjonQW5zd2VyIHRoZSBxdWVzdGlvbiBiZWxvdyBiYXNlZCBvbiB0aGUgdGV4dCB5b3UgcHJldmlvdXNseSByZWFkLicsInRhc2siOmZhbHNlLCJjb21wcmVoZW5zaW9uIjp0cnVlfX0pOl92bS5fZSgpLF9jKCdUcmlhbFNjcmVlbicse2tleTondHJhaW5pbmctJyArIGksYXR0cnM6eyJ0cmlhbCI6dHJpYWwsInRyaWFsVHlwZSI6J3RyYWluaW5nJywidHJpYWxudW1iZXIiOmksInByb2dyZXNzIjppIC8gX3ZtLnByYWN0aWNlX3RyaWFscy5sZW5ndGgsIm9wdGlvbnMiOlsnQXBwcm92ZScsICdSZWplY3QnXSwidGV4dCI6dHJpYWwudGV4dCwiaW5zdHJ1Y3Rpb25zIjonTm90aWNlIHRoZSBUT1hJQ0lUWSBTQ09SRS4gQXBwcm92ZSBvciByZWplY3QgdGhlIGNvbW1lbnQuJywidGFzayI6dHJ1ZX19KV19KSxfYygnU2NyZWVuJyx7YXR0cnM6eyJ0aXRsZSI6J0V4cGVyaW1lbnQnfX0sW192bS5fdigiIFByYWN0aWNlIHJvdW5kIGlzIG92ZXIhIFRoZSBuZXh0IHF1ZXN0aW9ucyB3aWxsIHByb3ZpZGUgbm8gZmVlZGJhY2suIFJlYWQgZWFjaCBvbmUgY2FyZWZ1bGx5IGFuZCBtYWtlIGEgZGVjaXNpb24gYWNjb3JkaW5nIHRvIHdoYXQgeW91IHRoaW5rIGlzIGNvcnJlY3QuICIpLF9jKCdicicpLF9jKCdicicpLF92bS5fdigiIFdoZW4geW91IGFyZSByZWFkeSwgIiksX2MoJ2InLFtfdm0uX3YoImNsaWNrIHRoZSBidXR0b24gdG8gc3RhcnQgdGhlIGV4cGVyaW1lbnQiKV0pLF92bS5fdigiLiAiKSxfYygnYnV0dG9uJyx7b246eyJjbGljayI6ZnVuY3Rpb24oJGV2ZW50KXtyZXR1cm4gX3ZtLiRtYWdwaWUubmV4dFNjcmVlbigpO319fSxbX3ZtLl92KCIgU3RhcnQgIildKV0pLF92bS5fbCgoX3ZtLm1haW5fdHJpYWxzKSxmdW5jdGlvbih0cmlhbCxpKXtyZXR1cm4gW19jKCdUcmlhbFNjcmVlbicse2tleTonZXhwZXJpbWVudC0nICsgaSxhdHRyczp7InRyaWFsIjp0cmlhbCwidHJpYWwtdHlwZSI6J2V4cGVyaW1lbnQnLCJ0cmlhbG51bWJlciI6aSwicHJvZ3Jlc3MiOmkvX3ZtLm1haW5fdHJpYWxzLmxlbmd0aCwib3B0aW9ucyI6WydJIGhhdmUgcmVhZCB0aGUgdGV4dCddLCJ0ZXh0Ijp0cmlhbC50ZXh0LCJ0YXNrIjpmYWxzZX19KSwoTWF0aC5yYW5kb20oKSA8IDAuMik/X2MoJ1RyaWFsU2NyZWVuJyx7a2V5OidleHBlcmltZW50LScgKyBpLGF0dHJzOnsidHJpYWwiOnRyaWFsLCJ0cmlhbFR5cGUiOidleHBlcmltZW50JywidHJpYWxudW1iZXIiOmksInByb2dyZXNzIjppIC8gX3ZtLm1haW5fdHJpYWxzLmxlbmd0aCwib3B0aW9ucyI6WydZZXMnLCAnTm8nXSwidGV4dCI6X3ZtLmNvbXByZWhlbnNpb25fcXVlc3Rpb24sInRhc2siOmZhbHNlLCJjb21wcmVoZW5zaW9uIjp0cnVlfX0pOl92bS5fZSgpLF9jKCdUcmlhbFNjcmVlbicse2tleTonZXhwZXJpbWVudC0nICsgaSxhdHRyczp7InRyaWFsIjp0cmlhbCwidHJpYWwtdHlwZSI6J2V4cGVyaW1lbnQnLCJ0cmlhbG51bWJlciI6aSwicHJvZ3Jlc3MiOmkvX3ZtLm1haW5fdHJpYWxzLmxlbmd0aCwib3B0aW9ucyI6WydBcHByb3ZlJywgJ1JlamVjdCddLCJ0ZXh0Ijp0cmlhbC50ZXh0LCJ0YXNrIjp0cnVlfX0pXX0pLF9jKCdQb3N0VGVzdFNjcmVlbicpLF9jKCdEZWJ1Z1Jlc3VsdHNTY3JlZW4nKV0sMil9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}