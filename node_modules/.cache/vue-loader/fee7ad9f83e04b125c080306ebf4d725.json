{"remainingRequest":"C:\\thesis\\magpie-exp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\thesis\\magpie-exp\\node_modules\\magpie-base\\src\\components\\inputs\\RatingInput.vue?vue&type=style&index=0&id=f51afe58&scoped=true&lang=css&","dependencies":[{"path":"C:\\thesis\\magpie-exp\\node_modules\\magpie-base\\src\\components\\inputs\\RatingInput.vue","mtime":1656594654854},{"path":"C:\\thesis\\magpie-exp\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651676242449},{"path":"C:\\thesis\\magpie-exp\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651676244489},{"path":"C:\\thesis\\magpie-exp\\node_modules\\postcss-loader\\src\\index.js","mtime":1651676243373},{"path":"C:\\thesis\\magpie-exp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651676241754},{"path":"C:\\thesis\\magpie-exp\\node_modules\\vue-loader\\lib\\index.js","mtime":1651676243816}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm9wdGlvbnMgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZ2FwOiAxNXB4OwogIG1hcmdpbjogMjBweCAwOwp9Cgoub3B0aW9ucyAubGVmdCwKLm9wdGlvbnMgLnJpZ2h0IHsKICBmbGV4LWdyb3c6IDA7CiAgcGFkZGluZzogMCAxNXB4Owp9Cgoub3B0aW9ucyBsYWJlbCB7CiAgZmxleC1ncm93OiAwOwp9Cg=="},{"version":3,"sources":["RatingInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"RatingInput.vue","sourceRoot":"node_modules/magpie-base/src/components/inputs","sourcesContent":["<docs>\n```vue\n<Experiment>\n    <Screen>\n\n      <Slide>\n        <p>Fries or soup?</p>\n        <RatingInput\n          left=\"Fries\"\n          :response.sync= \"$magpie.measurements.lunch\"\n          right=\"Soup\" />\n        <p v-if= \"$magpie.measurements.lunch > 4\">I concur!</p>\n        <button @click=\"$magpie.saveAndNextScreen();\">Submit</button>\n      </Slide>\n\n    </Screen>\n\n</Experiment>\n```\n\n```vue\n<Experiment>\n    <Screen>\n      <p>Fries or soup?</p>\n      <RatingInput\n          left=\"Fries\"\n          right=\"Soup\"\n          :count=\"11\"/>\n    </Screen>\n\n</Experiment>\n```\n</docs>\n\n<template>\n  <div class=\"rating\">\n    <form>\n      <div class=\"options\">\n        <div class=\"left\">{{ left }}</div>\n        <label v-for=\"i in count\" :key=\"i\"\n          ><input\n            v-model=\"answers[i]\"\n            type=\"radio\"\n            name=\"rating\"\n            @input=\"$emit('update:response', i)\"\n          />\n          {{ i }}</label\n        >\n        <div class=\"right\">{{ right }}</div>\n      </div>\n    </form>\n  </div>\n</template>\n\n<script>\n/**\n * Have your participants rate their answer on a rating scale\n */\nexport default {\n  name: 'RatingInput',\n  props: {\n    /**\n     * The length of the rating scale\n     */\n    count: {\n      type: Number,\n      default: 7\n    },\n    /**\n     * Text left of the rating scale\n     */\n    left: {\n      type: String,\n      optional: true,\n      default: ''\n    },\n    /**\n     * Text right of the rating scale\n     */\n    right: {\n      type: String,\n      optional: true,\n      default: ''\n    }\n  },\n  data() {\n    const answers = {};\n    for (let i = 1; i < this.count; i++) {\n      answers[i] = false;\n    }\n\n    return {\n      answers\n    };\n  }\n};\n</script>\n\n<style scoped>\n.options {\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  margin: 20px 0;\n}\n\n.options .left,\n.options .right {\n  flex-grow: 0;\n  padding: 0 15px;\n}\n\n.options label {\n  flex-grow: 0;\n}\n</style>\n"]}]}